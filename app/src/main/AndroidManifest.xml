<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-sdk tools:overrideLibrary="android.support.v14.preference" />

    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_REMOTE_MESSAGING" />
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"
        android:maxSdkVersion="28" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="28" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM"/>

    <!--
        this can be used to create persistent dialogs for rare errors for debug purposes
        Utils.checkDrawOverlayPermission() needs to be called to get permission from user
        Utils.showSystemAlert() then can be used to display the dialog
        <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    -->

    <application
        android:name=".Weechat"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher_kitty"
        android:label="@string/etc__application_name"
        android:theme="@style/Weechat"
        android:usesCleartextTraffic="true"
        android:requestLegacyExternalStorage="true"
        android:windowSoftInputMode="adjustResize">

        <service
            android:name=".service.RelayService"
            android:foregroundServiceType="remoteMessaging" />

        <activity
            android:name=".WeechatActivity"
            android:launchMode="singleTask"
            android:windowSoftInputMode="stateHidden"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data android:name="android.app.shortcuts"
                android:resource="@xml/shortcuts" />
        </activity>

        <activity
            android:name=".BubbleActivity"
            android:allowEmbedded="true"
            android:resizeableActivity="true"
            tools:targetApi="r" />


        <!-- sharing -->
        <activity android:name=".ShareTextActivity"
            android:theme="@style/WeechatTranslucent"
            android:excludeFromRecents="true"
            android:launchMode="singleInstance">
        </activity>

        <!-- text only -->
        <activity-alias
            android:targetActivity=".ShareTextActivity"
            android:name=".ShareActivityText"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="text/plain" />
            </intent-filter>

            <meta-data
                android:name="android.service.chooser.chooser_target_service"
                android:value="androidx.sharetarget.ChooserTargetServiceCompat" />
        </activity-alias>

        <!-- text, images and videos -->
        <activity-alias
            android:targetActivity=".ShareTextActivity"
            android:name=".ShareActivityMedia"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="text/plain" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="image/*" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="image/*" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="video/*" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="video/*" />
            </intent-filter>

            <meta-data
                android:name="android.service.chooser.chooser_target_service"
                android:value="androidx.sharetarget.ChooserTargetServiceCompat" />
        </activity-alias>

        <!-- everything -->
        <activity-alias
            android:targetActivity=".ShareTextActivity"
            android:name=".ShareActivityEverything"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="*/*" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="*/*" />
            </intent-filter>

            <meta-data
                android:name="android.service.chooser.chooser_target_service"
                android:value="androidx.sharetarget.ChooserTargetServiceCompat" />
        </activity-alias>


        <activity android:name=".PreferencesActivity" />
        <activity android:name=".WeechatAboutActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.VIEW"/>
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <receiver android:enabled="true" android:name=".service.BootUpReceiver"
            android:permission="android.permission.RECEIVE_BOOT_COMPLETED"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>
        <receiver android:name=".service.PingBroadcastReceiver" />
        <receiver android:name=".service.SyncAlarmReceiver" />
        <receiver android:name=".notifications.InlineReplyReceiver" />
        <receiver android:name=".notifications.NotificationDismissedReceiver" />
        <receiver android:name=".notifications.BubbleDismissedReceiver" />

        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.file_provider"
            android:grantUriPermissions="true"
            android:exported="false">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/filepaths" />
        </provider>

        <!-- See https://developer.android.com/develop/ui/views/text-and-emoji/emoji2#optional-features -->
        <provider
            android:name="androidx.startup.InitializationProvider"
            android:authorities="${applicationId}.androidx-startup"
            android:exported="false"
            tools:node="merge">
            <meta-data android:name="androidx.emoji2.text.EmojiCompatInitializer"
                tools:node="remove" />
        </provider>
    </application>
</manifest>

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}
apply plugin: 'com.android.application'

dependencies {
    repositories {
        maven {
            google()
            url 'https://maven.google.com'
        }
    }

    compile 'com.android.support:support-v4:27.1.0'
    compile 'com.android.support:support-annotations:27.1.0' // For @Nullable/@NonNull
    compile 'com.android.support:appcompat-v7:27.1.0'
    compile 'com.android.support:preference-v7:27.1.0'  // preference fragment & al
    compile 'com.android.support:preference-v14:27.1.0' // styling for the fragment

    //compile "org.slf4j:slf4j-log4j12:1.7.12"  // Android Logging API
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'com.noveogroup.android:android-logger:1.3.5'

    compile "commons-codec:commons-codec:1.9"

    compile 'de.greenrobot:eventbus:2.4.0'

    // We need the weechat-relay library for connecting to weechat    
    compile(project(':weechat-relay')) {
        // Exclude this because slf4j-android is a superset of this
        exclude group: 'org.slf4j', module:'slf4j-api'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        versionCode 15
        versionName "0.12"

        minSdkVersion 16
        targetSdkVersion 27
    }

    signingConfigs {
	releasePlayConfig
	devPlayConfig
    }

    // Setup a bit of buildconfiguration
    buildTypes {
        // Debug version, only ever used locally
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            buildConfigField "String", "VERSION_BANNER", "\""+versionBanner()+"\""
        }

        // These are the real releases in the Google Play Store
        release {
            buildConfigField "String", "VERSION_BANNER", "\"" + versionBanner() + "\""
            signingConfig signingConfigs.releasePlayConfig

            minifyEnabled true
            proguardFile file('proguard.txt')
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
        }

        // Development releases in the Google Play Store(signed same as the cloudbees site)
        devrelease.initWith(buildTypes.release)
        devrelease {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            buildConfigField "String", "VERSION_BANNER", "\""+versionBanner()+"\""
	        signingConfig signingConfigs.devPlayConfig

            minifyEnabled true
            proguardFile file('proguard.txt')
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
      abortOnError false
    }
}

// Load properties from the user's local gradle.properties file(for both release and "dev" release builds)
if (project.hasProperty('devStorefile') &&
    project.hasProperty('devStorePassword') &&
    project.hasProperty('devKeyAlias') &&
    project.hasProperty('devKeyPassword')) {
    android.signingConfigs.devPlayConfig.storeFile = file(devStorefile)
    android.signingConfigs.devPlayConfig.storePassword = devStorePassword
    android.signingConfigs.devPlayConfig.keyAlias = devKeyAlias
    android.signingConfigs.devPlayConfig.keyPassword = devKeyPassword
} else {
    project.logger.warn('WARN: Set the values devStorefile, devStorePassword, devKeyAlias, and devKeyPassword in ~/.gradle/gradle.properties to sign the release.')
    android.buildTypes.devrelease.signingConfig = null
}

if (project.hasProperty('releaseStorefile') &&
    project.hasProperty('releaseStorePassword') &&
    project.hasProperty('releaseKeyAlias') &&
    project.hasProperty('releaseKeyPassword')) {
    android.signingConfigs.releasePlayConfig.storeFile = file(releaseStorefile)
    android.signingConfigs.releasePlayConfig.storePassword = releaseStorePassword
    android.signingConfigs.releasePlayConfig.keyAlias = releaseKeyAlias
    android.signingConfigs.releasePlayConfig.keyPassword = releaseKeyPassword
} else {
    project.logger.warn('WARN: Set the values releaseStorefile, releaseStorePassword, releaseKeyAlias, and releaseKeyPassword in ~/.gradle/gradle.properties to sign the release.')
    android.buildTypes.release.signingConfig = null
}


String versionBanner() {
    return 'git describe --long'.execute().text.trim()
}
